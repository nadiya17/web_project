{"version":3,"sources":["custom/application.js","custom/column.js","custom/main.js","custom/note.js","custom/script.js"],"names":["Application","save","object","columns","idCounter","Column","items","notes","Note","document","querySelectorAll","forEach","columnElement","column","id","parseInt","getAttribute","noteIds","noteElement","push","note","content","textContent","json","JSON","stringify","localStorage","setItem","load","getItem","mountePoint","querySelector","innerHTML","parse","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","_ref","value","append","element","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","noteId","_getNoteById","find","add","err","return","arguments","length","_classCallCheck","this","instance","createElement","classList","setAttribute","addEventListener","event","focus","headerElement","removeAttribute","dragstart","bind","dragend","dragover","drop","_len","Array","_key","includes","dragged","stopPropagation","remove","dropped","preventDefault","children","from","indexOf","insertBefore","nextElementSibling","$","ready","on","animate","scrollTop","attr","offset","top","click","is","not","prop","trim","dragenter","dragleave","x","parentElement","indexA","indexB","closest"],"mappings":"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","file":"custom-bundle.min.js","sourcesContent":["const Application = {\n    save() {\n        const object = {\n            columns: {\n                 idCounter: Column.idCounter,\n                 items: []\n            },\n\n            notes: {\n                idCounter: Note.idCounter,\n                items: []\n            }\n        }\n\n        document\n            .querySelectorAll('.column')\n            .forEach(columnElement => {\n                const column = {\n                    id: parseInt(columnElement.getAttribute('data-column-id')),\n                    noteIds: []\n                }\n                columnElement\n                .querySelectorAll('.note')\n                .forEach(noteElement => {\n                    column.noteIds.push(parseInt(noteElement.getAttribute('data-note-id')))\n                })\n\n                object.columns.items.push(column)\n            })\n\n        document\n            .querySelectorAll('.note')\n            .forEach(noteElement => {\n                const note = {\n                    id: parseInt(noteElement.getAttribute('data-note-id')),\n                    content: noteElement.textContent\n                }\n\n                object.notes.items.push(note)\n            })\n\n        const json = JSON.stringify(object)\n\n        localStorage.setItem('trello', json)\n    },\n\n    load() {\n        if (!localStorage.getItem('trello')) {\n            return\n        }\n\n        const mountePoint = document.querySelector('.columns')\n        mountePoint.innerHTML = '' \n\n        const object = JSON.parse(localStorage.getItem('trello'))\n        const getNoteById = id => object.notes.items.find(note => note.id === id)\n\n        for (const { id, noteIds } of object.columns.items) {\n            const column = new Column(id)\n\n            mountePoint.append(column.element)\n\n            for(const noteId of noteIds) {\n                const { id , content } = getNoteById(noteId)\n                const note = new Note(id, content)\n\n                column.add(note)\n            }\n        }        \n    }\n}","class Column {\n    constructor (id = null) {\n        const instance = this\n        this.notes = []\n        const element = this.element = document.createElement('div')\n        element.classList.add('column')\n        element.setAttribute('draggable', 'true')\n\n        if (id) {\n            element.setAttribute('data-column-id', id) \n        }\n        else {\n            element.setAttribute('data-column-id', Column.idCounter)\n            Column.idCounter++\n        }\n\n        element.innerHTML = \n        `\n        <p class=\"column-header\">В плане</p>\n                        <div data-notes>\n                        \n                        </div>\n                        <p class=\"column-footer\">\n                            <span data-action-addNote class=\"action\">+ Добавить карточку</span>\n                        </p>\n        `\n            //находим кнопку добавления заметок\n                const spanAction_addNote = element.querySelector('[data-action-addNote]')\n        \n                spanAction_addNote.addEventListener('click', function (event) {\n                    //при сробатывании события создаем новую заметку\n                    const note = new Note\n                    instance.add(note)\n                    //позволяет сразу вводить данные в новую заметку\n                    note.element.setAttribute('contenteditable', 'true')\n                    note.element.focus()\n                })\n                // при двойном клике редактирует титул колонки\n                const headerElement = element.querySelector('.column-header')\n                headerElement.addEventListener('dblclick', function(event) {\n                headerElement.setAttribute('contenteditable', true)\n                headerElement.focus()\n                })\n\n                headerElement.addEventListener('blur', function(event) {\n                headerElement.removeAttribute('contenteditable', true)\n                \n                })\n\n                element.addEventListener('dragstart', this.dragstart.bind(this))\n                element.addEventListener('dragend', this.dragend.bind(this))\n\n                element.addEventListener('dragover', this.dragover.bind(this))\n\n                element.addEventListener('drop', this.drop.bind(this))\n    }\n\n\n    add(...notes) {\n        for (const note of notes) {\n            if (!this.notes.includes(note)) {\n                this.notes.push(note)\n\n                this.element.querySelector('[data-notes]').append(note.element)\n            }\n        }\n    }\n\n    dragstart(event) {\n        Column.dragged = this.element\n        Column.dragged.classList.add('dragged')\n\n        event.stopPropagation()\n\n        document\n        .querySelectorAll('.note')\n        .forEach(noteElement => noteElement.removeAttribute('draggable'))\n    }\n\n    dragend(event) {\n        Column.dragged.classList.remove('dragged')\n        Column.dragged = null\n        Column.dropped = null\n\n        document\n        .querySelectorAll('.note')\n        .forEach(noteElement => noteElement.setAttribute('draggable', true))\n\n        document\n            .querySelectorAll('.column')\n            .forEach(columnElement => columnElement.classList.remove('under'))\n        Application.save()\n    }\n\n    dragover(event) {\n        event.preventDefault()\n        event.stopPropagation()\n\n            if (Column.dragged === this.element) {\n                if (Column.dropped) {\n                    Column.dropped.classList.remove('under')\n                }\n                Column.dropped = null\n            }\n\n            if (!Column.dragged || Column.dragged === this.element) {\n                return\n            }\n\n        Column.dropped = this.element\n        document\n            .querySelectorAll('.column')\n            .forEach(columnElement => columnElement.classList.remove('under'))\n        this.element.classList.add('under')    \n    }\n\n    drop() {\n        if (Note.dragged) {\n            return this.element.querySelector('[data-notes]').append(Note.dragged)\n        }\n\n        else if(Column.dragged) {\n           const children = Array.from(document.querySelector('.columns').children)\n           const indexA = children.indexOf(this.element) \n           const indexB = children.indexOf(Column.dragged)\n\n           if (indexA < indexB) {\n            document.querySelector('.columns').insertBefore(Column.dragged, this.element)\n           }\n           else {\n            document.querySelector('.columns').insertBefore(Column.dragged, this.element.nextElementSibling)\n           }\n\n           document\n            .querySelectorAll('.column')\n            .forEach(columnElement => columnElement.classList.remove('under'))\n        }\n    }\n\n}\n\n//счетчик для айди колонок\nColumn.idCounter = 4\nColumn.dragged = null\nColumn.dropped = null\n\n\n    ","\r\n $(document).ready(function () {\r\n   /* Scroller */\r\n    $(document).on('click', 'a[href^=\"#anchor\"]', function (event) {\r\n       event.preventDefault();\r\n\r\n       $('html, body').animate({\r\n          scrollTop: $($.attr(this, 'href')).offset().top\r\n       }, 1000);\r\n    });\r\n\r\n });\r\n\r\n // choose only one choice in checkbox\r\n\r\n $('#group input:checkbox').click(function(){\r\n\tif ($(this).is(':checked')) {\r\n\t\t $('#group input:checkbox').not(this).prop('checked', false);\r\n\t}\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n   \r\n\r\n","//реализуем добавление заметок в колонки\n\nclass Note {\n    constructor (id = null, content = '') {\n        const instance = this\n        const element = this.element = document.createElement('div')\n\n        element.classList.add('note')\n        element.setAttribute('draggable', 'true')\n        element.textContent = content\n\n        if (id) {\n            element.setAttribute('data-note-id', id)\n        }\n\n        else {\n            element.setAttribute('data-note-id', Note.idCounter)\n            Note.idCounter++\n        }\n          \n        element.addEventListener('dblclick', function(event) {\n\n            element.setAttribute('contenteditable', 'true')\n            element.removeAttribute('draggable')\n            instance.column.removeAttribute('draggable')\n            element.focus()\n        })\n        //это событие возникает когда элемент теряет фокус и когда он теряет фокус я просто буду убирать в нем  атрибут 'contenteditable'\n        element.addEventListener('blur', function(event) {\n            element.removeAttribute('contenteditable')\n            element.setAttribute('draggable','true')\n            instance.column.setAttribute('draggable', 'true')\n    \n            if (!element.textContent.trim().length) {\n                element.remove()\n            }\n    \n            Application.save()\n        })\n    \n        element.addEventListener('dragstart',this.dragstart.bind(this))\n        element.addEventListener('dragend', this.dragend.bind(this))\n        element.addEventListener('dragenter', this.dragenter.bind(this))\n        element.addEventListener('dragover', this.dragover.bind(this))\n        element.addEventListener('dragleave', this.dragleave.bind(this))\n        element.addEventListener('drop', this.drop.bind(this)) \n\n    }\n\n    get column () {\n        this.element.closest('.column')\n    }\n\n    dragstart(event) {\n        Note.dragged = this.element\n        this.element.classList.add('dragged')\n        event.stopPropagation()\n    }\n    \n     dragend(event) {\n        event.stopPropagation()\n        Note.dragged = null\n        this.element.classList.remove('dragged')\n    \n        document\n        .querySelectorAll('.note')\n        .forEach(x => x.classList.remove('under'))\n\n        Application.save()\n    }\n    \n     dragenter(event) {\n        event.stopPropagation()\n        if (!Note.dragged || this.element === Note.dragged) {\n            return\n        }\n        this.element.classList.add('under')\n    }\n    \n     dragover(event) {\n        event.preventDefault()\n        if (!Note.dragged || this.element === Note.dragged) {\n            return\n        }\n        //для того чтобы событие не всплывало\n        \n    }\n    \n     dragleave(event) {\n        event.stopPropagation()\n        if (!Note.dragged || this.element === Note.dragged) {\n            return\n        }\n        this.element.classList.remove('under')\n    }\n    \n     drop(event) {\n        event.stopPropagation()\n        if (!Note.dragged || this.element === Note.dragged) {\n            return\n        }\n    \n        if (this.element.parentElement === Note.dragged.parentElement) {\n            const note = Array.from(this.element.parentElement.querySelectorAll('.note'))\n            const indexA = note.indexOf(this.element)\n            const indexB = note.indexOf(Note.dragged)\n    \n            if (indexA < indexB) {\n                this.element.parentElement.insertBefore(Note.dragged, this.element)\n            }\n            else {\n                this.element.parentElement.insertBefore(Note.dragged, this.element.nextElementSibling)\n            }\n        }\n    \n        else {\n            this.element.parentElement.insertBefore(Note.dragged, this.element)\n        }\n    }\n}\n\nNote.idCounter = 8\nNote.dragged = null\n\n\n\n\n","Application.load()\n\n//реализуем добавление заметок в колонки\n//находим все колонки\n\n//создание колонки\n//находим кнопку для добавления колонки\ndocument\n.querySelector('[data-action-addColumn]')\n//вешаем событие\n.addEventListener('click', function(event) {\n    //создаем колонку\n    const column = new Column\n    document.querySelector('.columns').append(column.element)\n\n    Application.save()\n})\n\n\n\n\n\n\n \n\n\n"]}